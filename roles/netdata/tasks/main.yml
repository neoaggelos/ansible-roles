---
- name: add netdata repository
  shell:
    executable: /bin/bash
    cmd: |
      set -o pipefail
      curl -s "{{ netdata_add_repository_script }}" | sudo bash
  tags: [netdata, repository]

- name: install netdata
  package:
    name: netdata
    state: present
  tags: [netdata, packages]

- name: enable netdata service
  service:
    name: netdata
    enabled: true
    state: started
  tags: [netdata, service]

- name: configure alarms
  template:
    src: health_alarm_notify.conf.j2
    dest: "{{ netdata_conf_dir }}/health_alarm_notify.conf"
    mode: "0640"
    owner: root
    group: netdata
  notify:
    - restart netdata
  tags: [netdata, config]

- name: configure netdata.conf
  blockinfile:
    path: "{{ netdata_conf_dir }}/netdata.conf"
    block: "{{ netdata_conf }}"
    marker: "## {mark} ANSIBLE MANAGED CONFIGURATION"
  notify:
    - restart netdata
  tags: [netdata, config]

- name: create netdata conf files
  when: item.state | default('present') == 'present'
  template:
    src: "{{ item.template }}"
    dest: "{{ netdata_conf_dir }}/{{ item.name }}"
    mode: "{{ item.mode | default('0640') }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('netdata') }}"
  loop: "{{ netdata_conf_files }}"
  notify:
    - restart netdata
  tags: [netdata, config]

- name: remove absent netdata conf files
  when: item.state | default('present') == 'absent'
  file:
    dest: "{{ netdata_conf_dir }}/{{ item.name }}"
    state: absent
  loop: "{{ netdata_conf_files }}"
  notify:
    - restart netdata
  tags: [netdata, config]
